<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE PACKAGE SYSTEM "package.dtd">
<PACKAGE NAME="View" METAMODEL="MVC" NUMBER="11"
>
	<fileHeader version="6" toolName="Mia-Generation" toolVersion="9.2.1"/>
	<SCENARIO NAME="view generation" VISIBILITY="public" META_OBJECT="View" CATEGORY="default">
		<SERVICE_CALL NAME="current" PACKAGE="System" META_OBJECT="View"/>
		<GENERATION_STEP TYPE="FileTemplate" PACKAGE="View" META_OBJECT="View" CATEGORY="default" NAME="generation interface view" PARAM_COUNT="0"/>
		<GENERATION_STEP TYPE="FileTemplate" PACKAGE="View" META_OBJECT="View" CATEGORY="default" NAME="generation impl view" PARAM_COUNT="0"/>
	</SCENARIO>
	<SCRIPT NAME="view button" META_OBJECT="Action" CATEGORY="default">
		<TEXT><![CDATA[
		private Button btn[[current.name]];

]]></TEXT>
	</SCRIPT>
	<SCRIPT NAME="view button impl" META_OBJECT="Action" CATEGORY="default">
		<TEXT><![CDATA[
btn[[current.name]] = new Button(grpButtons, SWT.NONE);
			btn[[current.name]].setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, true, 1, 1));
			btn[[current.name]].setText("[[current.name]]");
			btn[[current.name]].addSelectionListener(new SelectionAdapter(){
			        public void widgetSelected(SelectionEvent event)
			        {
			          [[current.name]]();
			        }
			      });
			
	
]]></TEXT>
	</SCRIPT>
	<SCRIPT NAME="view impl methods" META_OBJECT="Action" CATEGORY="default">
		<TEXT><![CDATA[
		public void [[current.name]]() {
				this.controller.[[current.name]]();
		}
	
]]></TEXT>
	</SCRIPT>
	<SCRIPT NAME="view interface methods" META_OBJECT="Action" CATEGORY="default">
		<TEXT><![CDATA[
	public void [[current.name]]() ;

]]></TEXT>
	</SCRIPT>
	<SCRIPT NAME="view label" META_OBJECT="ModelProperty" CATEGORY="default">
		<TEXT><![CDATA[
		Label lbl[[current.name]] = new Label(this, SWT.NONE);
		lbl[[current.name]].setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false,	1, 1));
		lbl[[current.name]].setText("[[current.name]]");
		
		Text [[current.name]]Field = new Text(this, SWT.BORDER);
		[[current.name]]Field.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true,	false, 1, 1));
		[[current.name]]Field.setText(this.model.get[[current.name]]());
		
		
		
]]></TEXT>
	</SCRIPT>
	<SCRIPT NAME="generation impl view" META_OBJECT="View" CATEGORY="default" FILE_ENCODING="UTF-8" VISIBILITY="public">
		<TEXT><![CDATA[
package [[model.package dot separator]].ui.view.swt;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.List;
import org.eclipse.swt.widgets.Group;

import [[model.package dot separator]].ui.controller.I[[current.model.name]]Controller;
import [[model.package dot separator]].ui.view.I[[current.name]];
import [[model.package dot separator]].model.I[[current.model.name]];


public class [[current.name]] extends Shell implements I[[current.name]] {
		private I[[current.model.name]]Controller controller;
		private I[[current.model.name]] model;
		
[[current.actions.view button]]
		public List [[current.model.ownedElements.name]]List;
		/**
	 * Create the shell.
	 * @param display
	 */
		public [[current.name]](Display display, [[model.package dot separator]].model.I[[current.model.name]] model,  [[model.package dot separator]].ui.controller.I[[current.model.name]]Controller controller){
				super(display, SWT.SHELL_TRIM);
				this.model = model;
				this.controller = controller;
				createContents();
		}
		
[[current.actions.view impl methods]]
		private void createContents(){
			setText("Vue [[current.model.name]]");
			setSize(458, 308);
			setLayout(new GridLayout(2, false));
		
			[[current.model.properties.view label]]
			
			// Liste
			[[current.view createContent list]]
			
			Group grpButtons = new Group(this, SWT.NONE);
			grpButtons.setLayout(new GridLayout(2, false));
			grpButtons.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
			
			[[current.actions.view button impl]]					
			

	}

		@Override
		protected void checkSubclass() {
			// Disable the check that prevents subclassing of SWT components
		}
	
}
]]></TEXT>
		<PROPERTY NAME="Filename"/>
	</SCRIPT>
	<SCRIPT NAME="generation impl view$Filename" META_OBJECT="View" CATEGORY="default">
		<TEXT><![CDATA[
[[model.package slash separator]]/ui/view/swt/[[current.name]].java
]]></TEXT>
	</SCRIPT>
	<SCRIPT NAME="generation interface view" META_OBJECT="View" CATEGORY="default" FILE_ENCODING="UTF-8" VISIBILITY="public">
		<TEXT><![CDATA[
package [[model.package dot separator]].ui.view;


public interface I[[current.name]] {
	
[[current.actions.view interface methods]]
			
}
]]></TEXT>
		<PROPERTY NAME="Filename"/>
	</SCRIPT>
	<SCRIPT NAME="generation interface view$Filename" META_OBJECT="View" CATEGORY="default">
		<TEXT><![CDATA[
[[model.package slash separator]]/ui/view/I[[current.name]].java
]]></TEXT>
	</SCRIPT>
	<SCRIPT NAME="view createContent list" META_OBJECT="View" CATEGORY="default">
		<TEXT><![CDATA[
Group grp[[current.model.ownedElements.name]] = new Group(this, SWT.NONE);
			grp[[current.model.ownedElements.name]].setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
			grp[[current.model.ownedElements.name]].setText("Liste des [[current.model.ownedElements.name]]");
			grp[[current.model.ownedElements.name]].setLayout(new GridLayout());
	
			this.[[current.model.ownedElements.name]]List = new List(grp[[current.model.ownedElements.name]], SWT.BORDER | SWT.V_SCROLL | SWT.SINGLE);
			this.[[current.model.ownedElements.name]]List.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
			
			for (final [[model.package dot separator]].model.I[[current.model.ownedElements.name]] elt : this.model.get[[current.model.ownedElements.name]]s()) {
				this.[[current.model.ownedElements.name]]List.add(elt.toString());
			}
]]></TEXT>
		<PROPERTY NAME="Precondition"/>
	</SCRIPT>
	<MACRO_CONDITION NAME="view createContent list$Precondition" META_OBJECT="View" CATEGORY="default">
		<TEXT><![CDATA[
return current.getModel().getOwnedElements().size()>0;
]]></TEXT>
	</MACRO_CONDITION>
	<METAMODELS_INFO_CACHE>
		<METAMODEL_IMPORT CLAUSE="com.mia.formation.mvc.*" RELATED_METAS="Action,Model,ModelProperty,UIApplication,View,NamedElement"/>
		<METAMODEL_CONTAINER_QNAME CQNAME="mvc" RELATED_METAS="Action,Model,ModelProperty,UIApplication,View,NamedElement"/>
	</METAMODELS_INFO_CACHE>
</PACKAGE>
